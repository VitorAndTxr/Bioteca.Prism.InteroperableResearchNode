# Docker Compose for Persistence Layer
# This file contains all stateful services (PostgreSQL, Redis, Azurite, pgAdmin)
#
# IMPORTANT: This compose file manages persistent data services.
# - Use 'docker-compose -f docker-compose.persistence.yml up -d' to start
# - Use 'docker-compose -f docker-compose.persistence.yml down' to stop (data is preserved)
# - Use 'docker-compose -f docker-compose.persistence.yml down -v' to remove volumes (data is deleted)
#
# Benefits of separation:
# - Data persists even when application containers are stopped/recreated
# - Independent lifecycle management for data and application layers
# - Safe to run 'docker-compose down' on application without losing data

services:
  # PostgreSQL Node A - Node registry database
  postgres-node-a:
    image: postgres:18-alpine
    container_name: irn-postgres-node-a
    restart: unless-stopped
    environment:
      - POSTGRES_DB=prism_node_a_registry
      - POSTGRES_USER=prism_user_a
      - POSTGRES_PASSWORD=prism_secure_password_2025_a
    ports:
      - "5432:5432"
    volumes:
      - postgres-data-node-a:/var/lib/postgresql/data
    networks:
      - irn-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prism_user_a -d prism_node_a_registry"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # PostgreSQL Node B - Node registry database
  postgres-node-b:
    image: postgres:18-alpine
    container_name: irn-postgres-node-b
    restart: unless-stopped
    environment:
      - POSTGRES_DB=prism_node_b_registry
      - POSTGRES_USER=prism_user_b
      - POSTGRES_PASSWORD=prism_secure_password_2025_b
    ports:
      - "5433:5432"
    volumes:
      - postgres-data-node-b:/var/lib/postgresql/data
    networks:
      - irn-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prism_user_b -d prism_node_b_registry"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # pgAdmin - PostgreSQL management UI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: irn-pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@prism.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - irn-network
    depends_on:
      postgres-node-a:
        condition: service_healthy
      postgres-node-b:
        condition: service_healthy

  # Redis Node A - Session and channel cache
  redis-node-a:
    image: redis:7.2-alpine
    container_name: irn-redis-node-a
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass prism-redis-password-node-a
    ports:
      - "6379:6379"
    volumes:
      - redis-data-node-a:/data
    networks:
      - irn-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  # Redis Node B - Session and channel cache
  redis-node-b:
    image: redis:7.2-alpine
    container_name: irn-redis-node-b
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass prism-redis-password-node-b
    ports:
      - "6380:6379"
    volumes:
      - redis-data-node-b:/data
    networks:
      - irn-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  # Azurite - Azure Storage Emulator (for future blob storage)
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    container_name: irn-azurite
    restart: unless-stopped
    command: azurite --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0 --loose
    ports:
      - "10000:10000"  # Blob service
      - "10001:10001"  # Queue service
      - "10002:10002"  # Table service
    volumes:
      - azurite-data:/data
    networks:
      - irn-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "10000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

# Shared network for all services
networks:
  irn-network:
    name: irn-network
    driver: bridge

# Named volumes for persistent data
volumes:
  postgres-data-node-a:
    name: irn-postgres-data-node-a
    driver: local
  postgres-data-node-b:
    name: irn-postgres-data-node-b
    driver: local
  pgadmin-data:
    name: irn-pgadmin-data
    driver: local
  redis-data-node-a:
    name: irn-redis-data-node-a
    driver: local
  redis-data-node-b:
    name: irn-redis-data-node-b
    driver: local
  azurite-data:
    name: irn-azurite-data
    driver: local
