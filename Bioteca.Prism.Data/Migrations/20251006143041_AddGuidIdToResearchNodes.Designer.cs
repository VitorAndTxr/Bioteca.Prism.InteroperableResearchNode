// <auto-generated />
using System;
using Bioteca.Prism.Data.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bioteca.Prism.Data.Migrations
{
    [DbContext(typeof(PrismDbContext))]
    [Migration("20251006143041_AddGuidIdToResearchNodes")]
    partial class AddGuidIdToResearchNodes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bioteca.Prism.Domain.Entities.Node.ResearchNode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Certificate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("certificate");

                    b.Property<string>("CertificateFingerprint")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("certificate_fingerprint");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("contact_info");

                    b.Property<string>("InstitutionDetails")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("institution_details");

                    b.Property<DateTime?>("LastAuthenticatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_authenticated_at");

                    b.Property<string>("Metadata")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("metadata");

                    b.Property<string>("NodeAccessLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("node_access_level");

                    b.Property<string>("NodeId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("node_id");

                    b.Property<string>("NodeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("node_name");

                    b.Property<string>("NodeUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("node_url");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registered_at");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CertificateFingerprint")
                        .IsUnique()
                        .HasDatabaseName("ix_research_nodes_certificate_fingerprint");

                    b.HasIndex("LastAuthenticatedAt")
                        .HasDatabaseName("ix_research_nodes_last_authenticated_at");

                    b.HasIndex("NodeAccessLevel")
                        .HasDatabaseName("ix_research_nodes_access_level");

                    b.HasIndex("NodeId")
                        .IsUnique()
                        .HasDatabaseName("ix_research_nodes_node_id");

                    b.HasIndex("RegisteredAt")
                        .HasDatabaseName("ix_research_nodes_registered_at");

                    b.HasIndex("Status")
                        .HasDatabaseName("ix_research_nodes_status");

                    b.ToTable("research_nodes", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
